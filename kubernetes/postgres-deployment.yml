apiVersion: apps/v1
kind: Deployment
metadata:
  #creationTimestamp: null
  labels:
    name: database
  name: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      service: postgres
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      #creationTimestamp: null
      labels:
        service: postgres
        app: postgres
    spec:
      containers:
      - env:
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              key: user
              name: postgres-credentials
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: postgres-credentials
        image: postgres:11-alpine
        imagePullPolicy: IfNotPresent
        name: postgres
#        resources:
#          requests:
#            memory: "128Mi"
#            cpu: "500m"
#          limits:
#            memory: "500Mi"
#            cpu: "500m"          
        # terminationMessagePath: /dev/termination-log
        # terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /var/lib/postgresql/data
          name: postgres-volume-mount
      #dnsPolicy: ClusterFirst
      #restartPolicy: Always
      #schedulerName: default-scheduler
      #securityContext: {}
      #terminationGracePeriodSeconds: 30
      volumes:
      - name: postgres-volume-mount
        persistentVolumeClaim:
          claimName: postgres-pvc
#status: {}
